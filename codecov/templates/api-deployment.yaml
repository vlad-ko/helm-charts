---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  {{- range $key, $val := .Values.tags }}
    {{ $key }}: {{ $val | quote }}
  {{- end }}
  {{- range $key, $val := .Values.api.deployment.annotations }}
    {{ $key }}: {{ $val | quote }}
  {{- end }}
  name: {{ .Values.api.name }}
  labels:
    chart: {{ .Chart.Name }}
    release: {{ .Release.Name | quote }}
spec:
  replicas: {{ .Values.api.deployment.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.api.name }}
  strategy:
    type: {{ .Values.api.deployment.updateStrategy.type }}
    {{- if eq .Values.api.deployment.updateStrategy.type "RollingUpdate" }}
    rollingUpdate:
      maxSurge: {{ .Values.api.deployment.updateStrategy.maxSurge}}
      maxUnavailable: {{ .Values.api.deployment.updateStrategy.maxUnavailable}}
    {{- end }}
  template:
    metadata:
      labels:
        app: {{ .Values.api.name }}
        release: {{ .Release.Name | quote }}
      annotations:
      {{- range $key, $val := .Values.tags }}
        {{ $key }}: {{ $val | quote }}
      {{- end }}
      {{- range $key, $value := .Values.api.deployment.annotations }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
    spec:
      {{- if .Values.podSecurityContext }}
      securityContext:
{{ toYaml .Values.podSecurityContext | indent 8 }}
      {{- end }}
      {{- with .Values.api.deployment.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.api.deployment.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.api.deployment.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
      {{- end }}
      containers:
      - image: {{ .Values.api.image }}:{{ .Values.codecovVersion }}
      {{- with .Values.extraEnvs }}
        env:
{{ toYaml . | nindent 10 }}
      {{- end }}
      {{- if .Values.envFrom }}
        envFrom:
{{ toYaml .Values.envFrom | indent 10 }}
      {{- end }}
        imagePullPolicy: "{{ .Values.imagePullPolicy }}"
        name: {{ .Values.api.name }}
        ports:
        - containerPort: {{ .Values.api.deployment.port }}
          protocol: TCP
          name: http
        livenessProbe:
{{ toYaml .Values.api.deployment.livenessProbe | indent 10 }}
        readinessProbe:
{{ toYaml .Values.api.deployment.readinessProbe | indent 10 }}
        resources:
{{ toYaml .Values.api.deployment.resources | indent 10 }}
        volumeMounts:
        {{- range .Values.secretMounts }}
        - name: {{ .name }}
          mountPath: {{ .path }}
          {{- if .subPath }}
          subPath: {{ .subPath }}
          {{- end }}
        {{- end }}
        - mountPath: /config
          name: codecov-yml
          readOnly: true
      restartPolicy: Always
      volumes:
      {{- range .Values.secretMounts }}
      - name: {{ .name }}
        secret:
          secretName: {{ .secretName }}
      {{- end }}
      - name: codecov-yml
        configMap:
          name: {{ .Values.configmap.name }}
          defaultMode: 420
      {{- if .Values.extraVolumes }}
{{ toYaml .Values.extraVolumes | indent 8 }}
      {{- end }}
  {{- if .Values.extraVolumes }}
{{ toYaml .Values.extraVolumeMounts | indent 10 }}
  {{- end }}
